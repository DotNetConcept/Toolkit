# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
 branches:
   include:
    - '*'
pool: DotNetConcept

variables:
  buildConfiguration: 'Release'
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

stages:
- stage: Build
  displayName: Build & Run unit tests
  jobs: 
  - job: Build
    steps:

    - task: gitversion/setup@0
      displayName: Setup GitVersion
      inputs:
        versionSpec: 5.3.7

    - task: gitversion/execute@0
      displayName: Execute GitVersion

    - task: Assembly-Info-NetCore@2
      displayName: Set assembly information
      inputs:
        Path: '$(Build.SourcesDirectory)'
        FileNames: '**/*.csproj'
        InsertAttributes: true
        FileEncoding: 'auto'
        WriteBOM: false
        Product: 'DotNetConcept.Toolkit'
        Company: 'DotNetConcept'
        Copyright: 'Copyright (c) DotNetConcept 2020'
        FileVersionNumber: '$(GitVersion.SemVer)'
        VersionNumber: '$(GitVersion.SemVer)'
        PackageVersion: '$(GitVersion.SemVer)'
        InformationalVersion: '$(GitVersion.InformationalVersion)'
        LogLevel: 'verbose'
        FailOnWarning: false
        DisableTelemetry: false

    - task: DotNetCoreCLI@2
      displayName: Build projects
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'    

    - task: DotNetCoreCLI@2
      displayName: Execute Unit Tests
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
        nobuild: true

    - task: DotNetCoreCLI@2
      displayName: Create NuGet packages
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        nobuild: true
        includesymbols: true
        includesource: true
        versioningScheme: 'off'
    
    - task: PublishBuildArtifacts@1
      displayName: Publish artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'NuGet packages'
        publishLocation: 'Container'

- stage: NuGetPack
  displayName: Publish NuGet packages
  dependsOn: Build
  condition: and(succeeded(), eq(variables['isMain'], 'true'))
  jobs: 
    - job: Pack
      steps:
      - script: echo 'Pack'